on:
  push:
    branches:
      - production
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            RAILS_MASTER_KEY=${{ secrets.RAILS_MASTER_KEY }}
          target: production
  deploy_server:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: Define variables
      run: |
        echo "REPOSITORY=$( echo ${{ github.repository }} | tr \"[:upper:]\" \"[:lower:]\")" >> $GITHUB_ENV
        echo "FULL_NAME=$( echo \"${{ env.REGISTRY }}/${{ github.repository }}\" | tr \"[:upper:]\" \"[:lower:]\")" >> $GITHUB_ENV
        echo "NAME=$( echo \"${{ github.event.repository.name }}\" | tr \"[:upper:]\" \"[:lower:]\")" >> $GITHUB_ENV
    - uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.OH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          mkdir -p ${{ env.NAME }}
          cd ${{ env.NAME }}
          docker pull ${{ env.FULL_NAME }}:production
          docker stop  ${{ env.NAME }} || true
          docker rm ${{ env.NAME }} || true
          docker run -p 3000:3000 --add-host=host.docker.internal:host-gateway --env-file=.env --name=${{ env.NAME }} -d -t ${{ env.FULL_NAME }}:production
          docker image prune -a
  cleanup:
    runs-on: ubuntu-latest
    needs: deploy_server
    steps:
    - uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.OH_PRIVATE_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          docker image prune -a
