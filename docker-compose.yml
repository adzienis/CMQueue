version: "3"

x-app: &app
  build:
    context: .
    dockerfile: Dockerfile
    target: development
  tmpfs:
    - /tmp
  entrypoint: ./bin/docker/entrypoints/wait-for-web.sh
  volumes:
    - .:/usr/src/app:cached
    - bundler:/usr/local/bundle:delegated
    - bootsnap_cache:/usr/src/bootsnap:delegated
    - rails_cache:/usr/src/app/tmp/cache:delegated
    - packs:/usr/src/app/public/packs:delegated
    - node_modules:/usr/src/app/node_modules:delegated
    - yarn_cache:/usr/src/yarn:delegated
    - letter_opener:/usr/src/app/tmp/letter_opener:delegated
  depends_on:
    - postgres
    - redis
    - elastic-search
  environment:
    - REDIS_URL=redis://@redis:6379/1
    - DATABASE_URL=postgres://postgres:postgres@postgres:5432/
    - SERVE_STATIC_FILES=true
    - METABASE_URL=https://analytics.cmqueue.xyz
    - ELASTICSEARCH_URL=http://elastic:okvSFg9uAf4TKw@elastic-search:9200
    - REDIS_PROVIDER=REDIS_URL
    - PGPASSWORD=J2m7ME5i3ZghoZ
    - MB_EMBEDDING_SECRET_KEY=sD0FSYu6sphAchbakTaQoG0pgfIG64eI8HRbICpDPOg=
    - MB_ENCRYPTION_SECRET_KEY=sD0FSYu6sphAchbakTaQoG0pgfIG64eI8HRbICpDPOg=
services:
  nginx:
    image: nginx
    volumes:
      - ./nginx:/etc/nginx/
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    depends_on:
      - web
  elastic-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    volumes:
      - data01:/usr/share/elasticsearch/data
    container_name: es01
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=true
  metabase:
    image: metabase/metabase:v0.41.3.1
    ports:
      - "0.0.0.0:3010:3000"
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - $PWD/metabase-data:/metabase-data/metabase.db
  postgres:
    image: postgres:13
    # Uncomment to access this containers Postgres instance via port 5432
    ports:
      - "0.0.0.0:5432:5432"
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - $PWD/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    restart: on-failure
  redis:
    image: redis:6.0.12-alpine
    volumes:
      - redis:/data:delegated
    # Uncomment to access this containers Redis instance via port 6379
    #ports:
      #- "127.0.0.1:6379:6379"
    restart: on-failure
  web:
    <<: *app
    entrypoint: ./bin/docker/entrypoints/wait-for-postgres.sh
    command: bash -c "./bin/docker/prepare-to-start-rails && ./bin/rails server -p 3000 -b '0.0.0.0'"
    ports:
      - "0.0.0.0:3000:3000"
    stdin_open: true
    tty: true
  worker:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq.yml

volumes:
  postgresql:
  redis:
  bundler:
  bootsnap_cache:
  rails_cache:
  packs:
  node_modules:
  yarn_cache:
  letter_opener:
  data01:
